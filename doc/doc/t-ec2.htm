<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>Sector/Sphere Manual</title>
<link rel="stylesheet" href="sectordoc.css" type="text/css" /></head>

<body>
<div class="ref_head">&nbsp;Installation</div>

<h3><font color="#000080">Running Sector on EC2 </font></h3>
<p>Sector/Sphere can be set up and run on Amazon EC2 following the same instructions as that on physical servers/racks. However, in order to make the installation process more efficient, a Sector EC2 image is highly recommended.</p>
<p><strong>Firewall Issue</strong></p>
<p>By default,  EC2 instances only open TCP ports 22 and 80. You need to update your security group policy to open all UDP ports (1024 - 65535) and the specific TCP ports that the security server and the master server use. </p>
<p><b>Choose an Existing Image</b></p>
<p>You may choose an existing Sector EC2 image and upload the most recent version to replace the existing one. Because each new instance may have a different IP address, you need to update the Sector configuration files (master.conf, slave.conf, and client.conf) with the new master IP address, unless you use the Elastic IP service to have a fixed master IP address (recommened if you run Sector on EC2 frequently).</p>
<p>The current Sector official EC2 image is <strong>ami-e2e0038b </strong>, available for the AWS-East zone. The image was created with a CVS version  pre-1.25. Please check the Sector web site for updates. When you start an instance with this image, the Sector code can be found in the /root directory and the data is stored in the /mnt directory. </p>
<p><b>Creating Your Own Image </b></p>
<p>It is recommended that you  create your own Sector image based on the most recent version of Sector.</p>
<p>Step 1: start an EC2 instance from an existing Sector image or a Debian Linux image. If starting from Debian, you may need to install g++, libssl-dev, libfuse-dev, etc.</p>
<p>Step 2: copy the most recent version of Sector to the instance if necessary. Compile and configure the Sector installation, configure this instance as the Sector security server and the master server. If you use Sector frequently on AWS, it is recommended to assign this instance a fixed IP address. </p>
<p>Step 3: make a new EC2 image and register it (following any EC2 instructions). </p>
<p>Step 4: start more instances from the new image created in Step 3 as Sector slaves.</p>
<p><b>Upload Your Data to EC2 </b></p>
<p>You can install a Sector client at your local server, connect it to your EC2 Sector system, and upload/download data with the Sector tools (<a href="r-t-upload.htm">sector_upload</a>, <a href="r-t-download.htm">sector_download</a>). Sector uses UDT protocol for data transfer and it may help to upload data to EC2 much faster.</p>
</body>
</html>
